// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "navdepp.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic navdepp::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic navdepp::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<2> navdepp::ap_ST_fsm_state1 = "1";
const sc_lv<2> navdepp::ap_ST_fsm_state2 = "10";
const sc_lv<32> navdepp::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<14> navdepp::ap_const_lv14_0 = "00000000000000";
const sc_lv<3> navdepp::ap_const_lv3_0 = "000";
const sc_lv<64> navdepp::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const bool navdepp::ap_const_boolean_1 = true;

navdepp::navdepp(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);

    SC_METHOD(thread_conv2d_22_input_input_array_address0);

    SC_METHOD(thread_conv2d_22_input_input_array_address1);

    SC_METHOD(thread_conv2d_22_input_input_array_ce0);

    SC_METHOD(thread_conv2d_22_input_input_array_ce1);

    SC_METHOD(thread_conv2d_22_input_input_array_d0);

    SC_METHOD(thread_conv2d_22_input_input_array_d1);

    SC_METHOD(thread_conv2d_22_input_input_array_we0);

    SC_METHOD(thread_conv2d_22_input_input_array_we1);

    SC_METHOD(thread_conv2d_22_input_input_shape_address0);

    SC_METHOD(thread_conv2d_22_input_input_shape_address1);

    SC_METHOD(thread_conv2d_22_input_input_shape_ce0);

    SC_METHOD(thread_conv2d_22_input_input_shape_ce1);

    SC_METHOD(thread_conv2d_22_input_input_shape_d0);

    SC_METHOD(thread_conv2d_22_input_input_shape_d1);

    SC_METHOD(thread_conv2d_22_input_input_shape_we0);

    SC_METHOD(thread_conv2d_22_input_input_shape_we1);

    SC_METHOD(thread_dense_23_output_array_address0);

    SC_METHOD(thread_dense_23_output_array_address1);

    SC_METHOD(thread_dense_23_output_array_ce0);

    SC_METHOD(thread_dense_23_output_array_ce1);

    SC_METHOD(thread_dense_23_output_array_d0);

    SC_METHOD(thread_dense_23_output_array_d1);

    SC_METHOD(thread_dense_23_output_array_we0);

    SC_METHOD(thread_dense_23_output_array_we1);

    SC_METHOD(thread_dense_23_output_shape_address0);

    SC_METHOD(thread_dense_23_output_shape_address1);

    SC_METHOD(thread_dense_23_output_shape_ce0);

    SC_METHOD(thread_dense_23_output_shape_ce1);

    SC_METHOD(thread_dense_23_output_shape_d0);

    SC_METHOD(thread_dense_23_output_shape_d1);

    SC_METHOD(thread_dense_23_output_shape_we0);

    SC_METHOD(thread_dense_23_output_shape_we1);

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "01";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "navdepp_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, conv2d_22_input_input_array_address0, "(port)conv2d_22_input_input_array_address0");
    sc_trace(mVcdFile, conv2d_22_input_input_array_ce0, "(port)conv2d_22_input_input_array_ce0");
    sc_trace(mVcdFile, conv2d_22_input_input_array_we0, "(port)conv2d_22_input_input_array_we0");
    sc_trace(mVcdFile, conv2d_22_input_input_array_d0, "(port)conv2d_22_input_input_array_d0");
    sc_trace(mVcdFile, conv2d_22_input_input_array_q0, "(port)conv2d_22_input_input_array_q0");
    sc_trace(mVcdFile, conv2d_22_input_input_array_address1, "(port)conv2d_22_input_input_array_address1");
    sc_trace(mVcdFile, conv2d_22_input_input_array_ce1, "(port)conv2d_22_input_input_array_ce1");
    sc_trace(mVcdFile, conv2d_22_input_input_array_we1, "(port)conv2d_22_input_input_array_we1");
    sc_trace(mVcdFile, conv2d_22_input_input_array_d1, "(port)conv2d_22_input_input_array_d1");
    sc_trace(mVcdFile, conv2d_22_input_input_array_q1, "(port)conv2d_22_input_input_array_q1");
    sc_trace(mVcdFile, conv2d_22_input_input_ndim, "(port)conv2d_22_input_input_ndim");
    sc_trace(mVcdFile, conv2d_22_input_input_numel, "(port)conv2d_22_input_input_numel");
    sc_trace(mVcdFile, conv2d_22_input_input_shape_address0, "(port)conv2d_22_input_input_shape_address0");
    sc_trace(mVcdFile, conv2d_22_input_input_shape_ce0, "(port)conv2d_22_input_input_shape_ce0");
    sc_trace(mVcdFile, conv2d_22_input_input_shape_we0, "(port)conv2d_22_input_input_shape_we0");
    sc_trace(mVcdFile, conv2d_22_input_input_shape_d0, "(port)conv2d_22_input_input_shape_d0");
    sc_trace(mVcdFile, conv2d_22_input_input_shape_q0, "(port)conv2d_22_input_input_shape_q0");
    sc_trace(mVcdFile, conv2d_22_input_input_shape_address1, "(port)conv2d_22_input_input_shape_address1");
    sc_trace(mVcdFile, conv2d_22_input_input_shape_ce1, "(port)conv2d_22_input_input_shape_ce1");
    sc_trace(mVcdFile, conv2d_22_input_input_shape_we1, "(port)conv2d_22_input_input_shape_we1");
    sc_trace(mVcdFile, conv2d_22_input_input_shape_d1, "(port)conv2d_22_input_input_shape_d1");
    sc_trace(mVcdFile, conv2d_22_input_input_shape_q1, "(port)conv2d_22_input_input_shape_q1");
    sc_trace(mVcdFile, dense_23_output_array_address0, "(port)dense_23_output_array_address0");
    sc_trace(mVcdFile, dense_23_output_array_ce0, "(port)dense_23_output_array_ce0");
    sc_trace(mVcdFile, dense_23_output_array_we0, "(port)dense_23_output_array_we0");
    sc_trace(mVcdFile, dense_23_output_array_d0, "(port)dense_23_output_array_d0");
    sc_trace(mVcdFile, dense_23_output_array_q0, "(port)dense_23_output_array_q0");
    sc_trace(mVcdFile, dense_23_output_array_address1, "(port)dense_23_output_array_address1");
    sc_trace(mVcdFile, dense_23_output_array_ce1, "(port)dense_23_output_array_ce1");
    sc_trace(mVcdFile, dense_23_output_array_we1, "(port)dense_23_output_array_we1");
    sc_trace(mVcdFile, dense_23_output_array_d1, "(port)dense_23_output_array_d1");
    sc_trace(mVcdFile, dense_23_output_array_q1, "(port)dense_23_output_array_q1");
    sc_trace(mVcdFile, dense_23_output_ndim, "(port)dense_23_output_ndim");
    sc_trace(mVcdFile, dense_23_output_numel, "(port)dense_23_output_numel");
    sc_trace(mVcdFile, dense_23_output_shape_address0, "(port)dense_23_output_shape_address0");
    sc_trace(mVcdFile, dense_23_output_shape_ce0, "(port)dense_23_output_shape_ce0");
    sc_trace(mVcdFile, dense_23_output_shape_we0, "(port)dense_23_output_shape_we0");
    sc_trace(mVcdFile, dense_23_output_shape_d0, "(port)dense_23_output_shape_d0");
    sc_trace(mVcdFile, dense_23_output_shape_q0, "(port)dense_23_output_shape_q0");
    sc_trace(mVcdFile, dense_23_output_shape_address1, "(port)dense_23_output_shape_address1");
    sc_trace(mVcdFile, dense_23_output_shape_ce1, "(port)dense_23_output_shape_ce1");
    sc_trace(mVcdFile, dense_23_output_shape_we1, "(port)dense_23_output_shape_we1");
    sc_trace(mVcdFile, dense_23_output_shape_d1, "(port)dense_23_output_shape_d1");
    sc_trace(mVcdFile, dense_23_output_shape_q1, "(port)dense_23_output_shape_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("navdepp.hdltvin.dat");
    mHdltvoutHandle.open("navdepp.hdltvout.dat");
}

navdepp::~navdepp() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void navdepp::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
}

void navdepp::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void navdepp::thread_ap_done() {
    ap_done = ap_const_logic_0;
}

void navdepp::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void navdepp::thread_ap_ready() {
    ap_ready = ap_const_logic_0;
}

void navdepp::thread_conv2d_22_input_input_array_address0() {
    conv2d_22_input_input_array_address0 = ap_const_lv14_0;
}

void navdepp::thread_conv2d_22_input_input_array_address1() {
    conv2d_22_input_input_array_address1 = ap_const_lv14_0;
}

void navdepp::thread_conv2d_22_input_input_array_ce0() {
    conv2d_22_input_input_array_ce0 = ap_const_logic_0;
}

void navdepp::thread_conv2d_22_input_input_array_ce1() {
    conv2d_22_input_input_array_ce1 = ap_const_logic_0;
}

void navdepp::thread_conv2d_22_input_input_array_d0() {
    conv2d_22_input_input_array_d0 = ap_const_lv32_0;
}

void navdepp::thread_conv2d_22_input_input_array_d1() {
    conv2d_22_input_input_array_d1 = ap_const_lv32_0;
}

void navdepp::thread_conv2d_22_input_input_array_we0() {
    conv2d_22_input_input_array_we0 = ap_const_logic_0;
}

void navdepp::thread_conv2d_22_input_input_array_we1() {
    conv2d_22_input_input_array_we1 = ap_const_logic_0;
}

void navdepp::thread_conv2d_22_input_input_shape_address0() {
    conv2d_22_input_input_shape_address0 = ap_const_lv3_0;
}

void navdepp::thread_conv2d_22_input_input_shape_address1() {
    conv2d_22_input_input_shape_address1 = ap_const_lv3_0;
}

void navdepp::thread_conv2d_22_input_input_shape_ce0() {
    conv2d_22_input_input_shape_ce0 = ap_const_logic_0;
}

void navdepp::thread_conv2d_22_input_input_shape_ce1() {
    conv2d_22_input_input_shape_ce1 = ap_const_logic_0;
}

void navdepp::thread_conv2d_22_input_input_shape_d0() {
    conv2d_22_input_input_shape_d0 = ap_const_lv64_0;
}

void navdepp::thread_conv2d_22_input_input_shape_d1() {
    conv2d_22_input_input_shape_d1 = ap_const_lv64_0;
}

void navdepp::thread_conv2d_22_input_input_shape_we0() {
    conv2d_22_input_input_shape_we0 = ap_const_logic_0;
}

void navdepp::thread_conv2d_22_input_input_shape_we1() {
    conv2d_22_input_input_shape_we1 = ap_const_logic_0;
}

void navdepp::thread_dense_23_output_array_address0() {
    dense_23_output_array_address0 = ap_const_lv14_0;
}

void navdepp::thread_dense_23_output_array_address1() {
    dense_23_output_array_address1 = ap_const_lv14_0;
}

void navdepp::thread_dense_23_output_array_ce0() {
    dense_23_output_array_ce0 = ap_const_logic_0;
}

void navdepp::thread_dense_23_output_array_ce1() {
    dense_23_output_array_ce1 = ap_const_logic_0;
}

void navdepp::thread_dense_23_output_array_d0() {
    dense_23_output_array_d0 = ap_const_lv32_0;
}

void navdepp::thread_dense_23_output_array_d1() {
    dense_23_output_array_d1 = ap_const_lv32_0;
}

void navdepp::thread_dense_23_output_array_we0() {
    dense_23_output_array_we0 = ap_const_logic_0;
}

void navdepp::thread_dense_23_output_array_we1() {
    dense_23_output_array_we1 = ap_const_logic_0;
}

void navdepp::thread_dense_23_output_shape_address0() {
    dense_23_output_shape_address0 = ap_const_lv3_0;
}

void navdepp::thread_dense_23_output_shape_address1() {
    dense_23_output_shape_address1 = ap_const_lv3_0;
}

void navdepp::thread_dense_23_output_shape_ce0() {
    dense_23_output_shape_ce0 = ap_const_logic_0;
}

void navdepp::thread_dense_23_output_shape_ce1() {
    dense_23_output_shape_ce1 = ap_const_logic_0;
}

void navdepp::thread_dense_23_output_shape_d0() {
    dense_23_output_shape_d0 = ap_const_lv64_0;
}

void navdepp::thread_dense_23_output_shape_d1() {
    dense_23_output_shape_d1 = ap_const_lv64_0;
}

void navdepp::thread_dense_23_output_shape_we0() {
    dense_23_output_shape_we0 = ap_const_logic_0;
}

void navdepp::thread_dense_23_output_shape_we1() {
    dense_23_output_shape_we1 = ap_const_logic_0;
}

void navdepp::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm = "XX";
            break;
    }
}

void navdepp::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv2d_22_input_input_array_address0\" :  \"" << conv2d_22_input_input_array_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv2d_22_input_input_array_ce0\" :  \"" << conv2d_22_input_input_array_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv2d_22_input_input_array_we0\" :  \"" << conv2d_22_input_input_array_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv2d_22_input_input_array_d0\" :  \"" << conv2d_22_input_input_array_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"conv2d_22_input_input_array_q0\" :  \"" << conv2d_22_input_input_array_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv2d_22_input_input_array_address1\" :  \"" << conv2d_22_input_input_array_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv2d_22_input_input_array_ce1\" :  \"" << conv2d_22_input_input_array_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv2d_22_input_input_array_we1\" :  \"" << conv2d_22_input_input_array_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv2d_22_input_input_array_d1\" :  \"" << conv2d_22_input_input_array_d1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"conv2d_22_input_input_array_q1\" :  \"" << conv2d_22_input_input_array_q1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"conv2d_22_input_input_ndim\" :  \"" << conv2d_22_input_input_ndim.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"conv2d_22_input_input_numel\" :  \"" << conv2d_22_input_input_numel.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv2d_22_input_input_shape_address0\" :  \"" << conv2d_22_input_input_shape_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv2d_22_input_input_shape_ce0\" :  \"" << conv2d_22_input_input_shape_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv2d_22_input_input_shape_we0\" :  \"" << conv2d_22_input_input_shape_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv2d_22_input_input_shape_d0\" :  \"" << conv2d_22_input_input_shape_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"conv2d_22_input_input_shape_q0\" :  \"" << conv2d_22_input_input_shape_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv2d_22_input_input_shape_address1\" :  \"" << conv2d_22_input_input_shape_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv2d_22_input_input_shape_ce1\" :  \"" << conv2d_22_input_input_shape_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv2d_22_input_input_shape_we1\" :  \"" << conv2d_22_input_input_shape_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv2d_22_input_input_shape_d1\" :  \"" << conv2d_22_input_input_shape_d1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"conv2d_22_input_input_shape_q1\" :  \"" << conv2d_22_input_input_shape_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dense_23_output_array_address0\" :  \"" << dense_23_output_array_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dense_23_output_array_ce0\" :  \"" << dense_23_output_array_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dense_23_output_array_we0\" :  \"" << dense_23_output_array_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dense_23_output_array_d0\" :  \"" << dense_23_output_array_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"dense_23_output_array_q0\" :  \"" << dense_23_output_array_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dense_23_output_array_address1\" :  \"" << dense_23_output_array_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dense_23_output_array_ce1\" :  \"" << dense_23_output_array_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dense_23_output_array_we1\" :  \"" << dense_23_output_array_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dense_23_output_array_d1\" :  \"" << dense_23_output_array_d1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"dense_23_output_array_q1\" :  \"" << dense_23_output_array_q1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"dense_23_output_ndim\" :  \"" << dense_23_output_ndim.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"dense_23_output_numel\" :  \"" << dense_23_output_numel.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dense_23_output_shape_address0\" :  \"" << dense_23_output_shape_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dense_23_output_shape_ce0\" :  \"" << dense_23_output_shape_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dense_23_output_shape_we0\" :  \"" << dense_23_output_shape_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dense_23_output_shape_d0\" :  \"" << dense_23_output_shape_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"dense_23_output_shape_q0\" :  \"" << dense_23_output_shape_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dense_23_output_shape_address1\" :  \"" << dense_23_output_shape_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dense_23_output_shape_ce1\" :  \"" << dense_23_output_shape_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dense_23_output_shape_we1\" :  \"" << dense_23_output_shape_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dense_23_output_shape_d1\" :  \"" << dense_23_output_shape_d1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"dense_23_output_shape_q1\" :  \"" << dense_23_output_shape_q1.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

