// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _navdepp_HH_
#define _navdepp_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct navdepp : public sc_module {
    // Port declarations 50
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<14> > conv2d_22_input_input_array_address0;
    sc_out< sc_logic > conv2d_22_input_input_array_ce0;
    sc_out< sc_logic > conv2d_22_input_input_array_we0;
    sc_out< sc_lv<32> > conv2d_22_input_input_array_d0;
    sc_in< sc_lv<32> > conv2d_22_input_input_array_q0;
    sc_out< sc_lv<14> > conv2d_22_input_input_array_address1;
    sc_out< sc_logic > conv2d_22_input_input_array_ce1;
    sc_out< sc_logic > conv2d_22_input_input_array_we1;
    sc_out< sc_lv<32> > conv2d_22_input_input_array_d1;
    sc_in< sc_lv<32> > conv2d_22_input_input_array_q1;
    sc_in< sc_lv<64> > conv2d_22_input_input_ndim;
    sc_in< sc_lv<64> > conv2d_22_input_input_numel;
    sc_out< sc_lv<3> > conv2d_22_input_input_shape_address0;
    sc_out< sc_logic > conv2d_22_input_input_shape_ce0;
    sc_out< sc_logic > conv2d_22_input_input_shape_we0;
    sc_out< sc_lv<64> > conv2d_22_input_input_shape_d0;
    sc_in< sc_lv<64> > conv2d_22_input_input_shape_q0;
    sc_out< sc_lv<3> > conv2d_22_input_input_shape_address1;
    sc_out< sc_logic > conv2d_22_input_input_shape_ce1;
    sc_out< sc_logic > conv2d_22_input_input_shape_we1;
    sc_out< sc_lv<64> > conv2d_22_input_input_shape_d1;
    sc_in< sc_lv<64> > conv2d_22_input_input_shape_q1;
    sc_out< sc_lv<14> > dense_23_output_array_address0;
    sc_out< sc_logic > dense_23_output_array_ce0;
    sc_out< sc_logic > dense_23_output_array_we0;
    sc_out< sc_lv<32> > dense_23_output_array_d0;
    sc_in< sc_lv<32> > dense_23_output_array_q0;
    sc_out< sc_lv<14> > dense_23_output_array_address1;
    sc_out< sc_logic > dense_23_output_array_ce1;
    sc_out< sc_logic > dense_23_output_array_we1;
    sc_out< sc_lv<32> > dense_23_output_array_d1;
    sc_in< sc_lv<32> > dense_23_output_array_q1;
    sc_in< sc_lv<64> > dense_23_output_ndim;
    sc_in< sc_lv<64> > dense_23_output_numel;
    sc_out< sc_lv<3> > dense_23_output_shape_address0;
    sc_out< sc_logic > dense_23_output_shape_ce0;
    sc_out< sc_logic > dense_23_output_shape_we0;
    sc_out< sc_lv<64> > dense_23_output_shape_d0;
    sc_in< sc_lv<64> > dense_23_output_shape_q0;
    sc_out< sc_lv<3> > dense_23_output_shape_address1;
    sc_out< sc_logic > dense_23_output_shape_ce1;
    sc_out< sc_logic > dense_23_output_shape_we1;
    sc_out< sc_lv<64> > dense_23_output_shape_d1;
    sc_in< sc_lv<64> > dense_23_output_shape_q1;


    // Module declarations
    navdepp(sc_module_name name);
    SC_HAS_PROCESS(navdepp);

    ~navdepp();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_fsm_state1;
    static const sc_lv<2> ap_ST_fsm_state2;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_conv2d_22_input_input_array_address0();
    void thread_conv2d_22_input_input_array_address1();
    void thread_conv2d_22_input_input_array_ce0();
    void thread_conv2d_22_input_input_array_ce1();
    void thread_conv2d_22_input_input_array_d0();
    void thread_conv2d_22_input_input_array_d1();
    void thread_conv2d_22_input_input_array_we0();
    void thread_conv2d_22_input_input_array_we1();
    void thread_conv2d_22_input_input_shape_address0();
    void thread_conv2d_22_input_input_shape_address1();
    void thread_conv2d_22_input_input_shape_ce0();
    void thread_conv2d_22_input_input_shape_ce1();
    void thread_conv2d_22_input_input_shape_d0();
    void thread_conv2d_22_input_input_shape_d1();
    void thread_conv2d_22_input_input_shape_we0();
    void thread_conv2d_22_input_input_shape_we1();
    void thread_dense_23_output_array_address0();
    void thread_dense_23_output_array_address1();
    void thread_dense_23_output_array_ce0();
    void thread_dense_23_output_array_ce1();
    void thread_dense_23_output_array_d0();
    void thread_dense_23_output_array_d1();
    void thread_dense_23_output_array_we0();
    void thread_dense_23_output_array_we1();
    void thread_dense_23_output_shape_address0();
    void thread_dense_23_output_shape_address1();
    void thread_dense_23_output_shape_ce0();
    void thread_dense_23_output_shape_ce1();
    void thread_dense_23_output_shape_d0();
    void thread_dense_23_output_shape_d1();
    void thread_dense_23_output_shape_we0();
    void thread_dense_23_output_shape_we1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
